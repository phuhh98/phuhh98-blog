---
import type { BlogEntry } from "@/types/contentful";

import Giscus from "@/components/Giscus";
import ListRelatedPosts from "@/components/ListRelatedPosts";
import { Content } from "@/components/react/Content";
// import Code from "@/components/mdx/Code";
// import ImageMdx from "@/components/mdx/ImageMdx";
// import SButton from "@/components/mdx/SButton";
import Share from "@/components/Share";
// import TableOfContents from "@/components/TableOfContents";
import BlogPost from "@/layouts/BlogPost";
import { ContentRetriever } from "@/utils";

import { contentfulDocumentReadtime } from "../../utils/readTime";

const posts = await ContentRetriever.getPosts();
export async function getStaticPaths() {
  const posts = await ContentRetriever.getPosts();

  return posts.items.map((post) => ({
    params: { slug: post.fields.slug },
    props: post,
  }));
}
type Props = BlogEntry;

const post = Astro.props;
const MAX_POSTS = 3;
const getRelatedPosts = (post: Props) => {
  const lowercaseTags = post.fields.tags.map(
    (tag) => "fields" in tag && tag.fields.title.toLowerCase(),
  );
  const relatedPosts = posts.items.filter(
    (p) =>
      p.fields.slug !== post.fields.slug &&
      p.fields.tags.some(
        (t) => "fields" in t && lowercaseTags.includes(t.fields.title.toLowerCase()),
      ),
  );
  return relatedPosts.slice(0, MAX_POSTS);
};

const relatedPosts = getRelatedPosts(post);

// const { Content, headings, remarkPluginFrontmatter } = await post.render();
const readTime = await contentfulDocumentReadtime(post.fields.content);
---

<!-- <BlogPost 
post={post}
 headings={headings} 
id={post.sys.id}
 readTime={remarkPluginFrontmatter.minutesRead}
 /> -->
<BlogPost id={post.sys.id} post={post} readTime={readTime} />
<div class="grid grid-cols-1 md:grid-cols-[20%_auto] gap-10 mt-8">
  <aside class="md:flex flex-col gap-8">
    <Share />
    <!-- <div class="sticky top-20 self-start hidden md:block transition-all duration-200">
        {headings && headings.length > 0 && <TableOfContents {headings} />}
      </div> -->
  </aside>

  <!-- post -->
  <article class="max-w-full w-full">
    <div class="prose prose-lg md:prose-xl dark:prose-invert mb-12 min-w-full">
      <!-- <Content components={{ img: ImageMdx, pre: Code, SButton }} data-pagefind-body />
          -->
      <Content content={post.fields.content} data-pagefind-body />
    </div>
    <footer>
      <h2 class="font-bold text-lg dark:text-white mb-6">Related Posts</h2>
      <ListRelatedPosts posts={relatedPosts} />
    </footer>
  </article>
</div>

<Giscus />
